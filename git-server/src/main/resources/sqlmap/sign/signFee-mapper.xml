<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hivescm.tms.finance.server.dao.mapper.sign.SignFeeMapper" >
  <resultMap id="BaseResultMap" type="com.hivescm.tms.finance.server.dao.entity.sign.SignFeeDO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="company_id" property="companyId" jdbcType="BIGINT" />
    <result column="sign_id" property="signId" jdbcType="BIGINT" />
    <result column="to_pay" property="toPay" jdbcType="DECIMAL" />
    <result column="collect_payment" property="collectPayment" jdbcType="DECIMAL" />
    <result column="delivery_fee" property="deliveryFee" jdbcType="DECIMAL" />
    <result column="second_delivery_fee" property="secondDeliveryFee" jdbcType="DECIMAL" />
    <result column="other_fee_station" property="otherFeeStation" jdbcType="DECIMAL" />
    <result column="settlement_method" property="settlementMethod" jdbcType="INTEGER" />
    <result column="monthly_customer" property="monthlyCustomer" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="pay_method" property="payMethod" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_id, sign_id, to_pay, collect_payment, delivery_fee, second_delivery_fee, 
    settlement_method, monthly_customer, create_user, create_time, update_time, update_user,pay_method,other_fee_station 
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sign_fee
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sign_fee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hivescm.tms.finance.server.dao.entity.sign.SignFeeDO" >
    insert into sign_fee (id, company_id, sign_id, 
      to_pay, collect_payment, delivery_fee, 
      second_delivery_fee, settlement_method, monthly_customer, 
      create_user, create_time, update_time, 
      update_user,pay_method,other_fee_station)
    values (#{id,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{signId,jdbcType=BIGINT}, 
      #{toPay,jdbcType=DECIMAL}, #{collectPayment,jdbcType=DECIMAL}, #{deliveryFee,jdbcType=DECIMAL}, 
      #{secondDeliveryFee,jdbcType=DECIMAL}, #{settlementMethod,jdbcType=INTEGER}, #{monthlyCustomer,jdbcType=INTEGER}, 
      #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, 
      #{updateUser,jdbcType=INTEGER}, #{settlementMethod,jdbcType=INTEGER},#{otherFeeStation ,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.hivescm.tms.finance.server.dao.entity.sign.SignFeeDO" >
    insert into sign_fee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="signId != null" >
        sign_id,
      </if>
      <if test="toPay != null" >
        to_pay,
      </if>
      <if test="collectPayment != null" >
        collect_payment,
      </if>
      <if test="deliveryFee != null" >
        delivery_fee,
      </if>
      <if test="secondDeliveryFee != null" >
        second_delivery_fee,
      </if>
      <if test="settlementMethod != null" >
        settlement_method,
      </if>
      <if test="monthlyCustomer != null" >
        monthly_customer,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="payMethod != null" >
        pay_method,
      </if>
       <if test="otherFeeStation != null" >
        other_fee_station ,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="signId != null" >
        #{signId,jdbcType=BIGINT},
      </if>
      <if test="toPay != null" >
        #{toPay,jdbcType=DECIMAL},
      </if>
      <if test="collectPayment != null" >
        #{collectPayment,jdbcType=DECIMAL},
      </if>
      <if test="deliveryFee != null" >
        #{deliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="secondDeliveryFee != null" >
        #{secondDeliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="settlementMethod != null" >
        #{settlementMethod,jdbcType=INTEGER},
      </if>
      <if test="monthlyCustomer != null" >
        #{monthlyCustomer,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="payMethod != null" >
        #{payMethod,jdbcType=INTEGER},
      </if>
      <if test="otherFeeStation  != null" >
        #{otherFeeStation ,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hivescm.tms.finance.server.dao.entity.sign.SignFeeDO" >
    update sign_fee
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="signId != null" >
        sign_id = #{signId,jdbcType=BIGINT},
      </if>
      <if test="toPay != null" >
        to_pay = #{toPay,jdbcType=DECIMAL},
      </if>
      <if test="collectPayment != null" >
        collect_payment = #{collectPayment,jdbcType=DECIMAL},
      </if>
      <if test="deliveryFee != null" >
        delivery_fee = #{deliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="secondDeliveryFee != null" >
        second_delivery_fee = #{secondDeliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="settlementMethod != null" >
        settlement_method = #{settlementMethod,jdbcType=INTEGER},
      </if>
      <if test="monthlyCustomer != null" >
        monthly_customer = #{monthlyCustomer,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="payMethod != null" >
       pay_method = #{payMethod,jdbcType=INTEGER},
      </if>
       <if test="otherFeeStation != null" >
       other_fee_station = #{otherFeeStation,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hivescm.tms.finance.server.dao.entity.sign.SignFeeDO" >
    update sign_fee
    set company_id = #{companyId,jdbcType=BIGINT},
      sign_id = #{signId,jdbcType=BIGINT},
      to_pay = #{toPay,jdbcType=DECIMAL},
      collect_payment = #{collectPayment,jdbcType=DECIMAL},
      delivery_fee = #{deliveryFee,jdbcType=DECIMAL},
      second_delivery_fee = #{secondDeliveryFee,jdbcType=DECIMAL},
      settlement_method = #{settlementMethod,jdbcType=INTEGER},
      monthly_customer = #{monthlyCustomer,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=INTEGER},
      settlement_method = #{settlementMethod,jdbcType=INTEGER},
      other_fee_station = #{otherFeeStation,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
   <insert id="insertBatch" parameterType="java.util.List">
	  insert into sign_fee (id, company_id, sign_id, 
	      to_pay, collect_payment, delivery_fee, 
	      second_delivery_fee, settlement_method, monthly_customer, 
	      create_user, create_time, update_time, 
	      update_user,pay_method,other_fee_station)
	      values
	      <foreach collection="list" item="item" separator=",">
	       (#{item.id,jdbcType=BIGINT}, #{item.companyId,jdbcType=BIGINT}, #{item.signId,jdbcType=BIGINT}, 
		      #{item.toPay,jdbcType=DECIMAL}, #{item.collectPayment,jdbcType=DECIMAL}, #{item.deliveryFee,jdbcType=DECIMAL}, 
		      #{item.secondDeliveryFee,jdbcType=DECIMAL}, #{item.settlementMethod,jdbcType=INTEGER}, #{item.monthlyCustomer,jdbcType=INTEGER}, 
		      #{item.createUser,jdbcType=INTEGER}, #{item.createTime,jdbcType=BIGINT}, #{item.updateTime,jdbcType=BIGINT}, 
		      #{item.updateUser,jdbcType=INTEGER}, #{item.settlementMethod,jdbcType=INTEGER},#{item.otherFeeStation ,jdbcType=DECIMAL}
		    )
	      </foreach>
  </insert>
  <delete id="deleteBatchBySignId" parameterType="java.util.List">
  	delete from sign_fee where sign_id in 
  	<foreach collection="list" item="item" separator="," open="(" close=")">
  		 #{item,jdbcType=BIGINT}
  	</foreach>
  </delete>
</mapper>