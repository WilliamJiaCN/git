<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hivescm.tms.finance.server.dao.mapper.sign.SignDetailDOMapper">
	<resultMap id="BaseResultMap"
		type="com.hivescm.tms.finance.server.dao.entity.sign.SignDetailDO">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="company_id" jdbcType="BIGINT" property="companyId" />
		<result column="sign_id" jdbcType="BIGINT" property="signId" />
		<result column="waybill_id" jdbcType="BIGINT" property="waybillId" />
		<result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
		<result column="dispatcher_detail_id" jdbcType="BIGINT"
			property="dispatcherDetailId" />
		<result column="waybill_goods_id" jdbcType="BIGINT" property="waybillGoodsId" />
		<result column="waybill_stock_detail_id" jdbcType="BIGINT"
			property="waybillStockDetailId" />
		<result column="sign_number" jdbcType="INTEGER" property="signNumber" />
		<result column="refuse_number" jdbcType="INTEGER" property="refuseNumber" />
		<result column="refuse_cause" jdbcType="VARCHAR" property="refuseCause" />
		<result column="unsigned_number" jdbcType="INTEGER" property="unsignedNumber" />
		<result column="create_number" jdbcType="INTEGER" property="createNumber" />
		<result column="packages" jdbcType="VARCHAR" property="packages" />
		<result column="box_number" jdbcType="VARCHAR" property="boxNumber" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="create_user" jdbcType="INTEGER" property="createUser" />
		<result column="create_time" jdbcType="BIGINT" property="createTime" />
		<result column="update_time" jdbcType="BIGINT" property="updateTime" />
		<result column="update_user" jdbcType="INTEGER" property="updateUser" />
		<result column="unit" jdbcType="VARCHAR" property="unit" />
		<result column="amount" jdbcType="INTEGER" property="amount" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, company_id, sign_id, waybill_id, goods_name, dispatcher_detail_id,
		waybill_goods_id,
		waybill_stock_detail_id, sign_number, refuse_number, unsigned_number, create_number,
		packages, box_number, remark, create_user, create_time, update_time,
		update_user,
		unit, amount
	</sql>

	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sign_details
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from sign_details
		where id = #{id,jdbcType=BIGINT}
	</delete>

	<insert id="insert"
		parameterType="com.hivescm.tms.finance.server.dao.entity.sign.SignDetailDO">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into sign_details (company_id, sign_id, waybill_id,
		goods_name, dispatcher_detail_id, waybill_goods_id,
		waybill_stock_detail_id, sign_number, refuse_number,refuse_cause
		unsigned_number, create_number, packages,
		box_number, remark, create_user,
		create_time, update_time, update_user,
		unit, amount)
		values (#{companyId,jdbcType=BIGINT}, #{signId,jdbcType=BIGINT},
		#{waybillId,jdbcType=BIGINT},
		#{goodsName,jdbcType=VARCHAR}, #{dispatcherDetailId,jdbcType=BIGINT},
		#{waybillGoodsId,jdbcType=BIGINT},
		#{waybillStockDetailId,jdbcType=BIGINT},
		#{signNumber,jdbcType=INTEGER}, #{refuseNumber,jdbcType=INTEGER},#{refuseCause,jdbcType=VARCHAR},
		#{unsignedNumber,jdbcType=INTEGER}, #{createNumber,jdbcType=INTEGER},
		#{packages,jdbcType=VARCHAR},
		#{boxNumber,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createUser,jdbcType=INTEGER},
		#{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT},
		#{updateUser,jdbcType=INTEGER},
		#{unit,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.hivescm.tms.finance.server.dao.entity.sign.SignDetailDO">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into sign_details
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="companyId != null">
				company_id,
			</if>
			<if test="signId != null">
				sign_id,
			</if>
			<if test="waybillId != null">
				waybill_id,
			</if>
			<if test="goodsName != null">
				goods_name,
			</if>
			<if test="dispatcherDetailId != null">
				dispatcher_detail_id,
			</if>
			<if test="waybillGoodsId != null">
				waybill_goods_id,
			</if>
			<if test="waybillStockDetailId != null">
				waybill_stock_detail_id,
			</if>
			<if test="signNumber != null">
				sign_number,
			</if>
			<if test="refuseNumber != null">
				refuse_number,
			</if>
			<if test="refuseCause != null">
				refuse_cause,
			</if>
			<if test="unsignedNumber != null">
				unsigned_number,
			</if>
			<if test="createNumber != null">
				create_number,
			</if>
			<if test="packages != null">
				packages,
			</if>
			<if test="boxNumber != null">
				box_number,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateUser != null">
				update_user,
			</if>
			<if test="unit != null">
				unit,
			</if>
			<if test="amount != null">
				amount,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="companyId != null">
				#{companyId,jdbcType=BIGINT},
			</if>
			<if test="signId != null">
				#{signId,jdbcType=BIGINT},
			</if>
			<if test="waybillId != null">
				#{waybillId,jdbcType=BIGINT},
			</if>
			<if test="goodsName != null">
				#{goodsName,jdbcType=VARCHAR},
			</if>
			<if test="dispatcherDetailId != null">
				#{dispatcherDetailId,jdbcType=BIGINT},
			</if>
			<if test="waybillGoodsId != null">
				#{waybillGoodsId,jdbcType=BIGINT},
			</if>
			<if test="waybillStockDetailId != null">
				#{waybillStockDetailId,jdbcType=BIGINT},
			</if>
			<if test="signNumber != null">
				#{signNumber,jdbcType=INTEGER},
			</if>
			<if test="refuseNumber != null">
				#{refuseNumber,jdbcType=INTEGER},
			</if>
			<if test="refuseCause != null">
				#{refuseCause,jdbcType=VARCHAR},
			</if>
			<if test="unsignedNumber != null">
				#{unsignedNumber,jdbcType=INTEGER},
			</if>
			<if test="createNumber != null">
				#{createNumber,jdbcType=INTEGER},
			</if>
			<if test="packages != null">
				#{packages,jdbcType=VARCHAR},
			</if>
			<if test="boxNumber != null">
				#{boxNumber,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=BIGINT},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=BIGINT},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=INTEGER},
			</if>
			<if test="unit != null">
				#{unit,jdbcType=VARCHAR},
			</if>
			<if test="amount != null">
				#{amount,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<update id="updateByExampleSelective" parameterType="map">
		update sign_details
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.companyId != null">
				company_id = #{record.companyId,jdbcType=BIGINT},
			</if>
			<if test="record.signId != null">
				sign_id = #{record.signId,jdbcType=BIGINT},
			</if>
			<if test="record.waybillId != null">
				waybill_id = #{record.waybillId,jdbcType=BIGINT},
			</if>
			<if test="record.goodsName != null">
				goods_name = #{record.goodsName,jdbcType=VARCHAR},
			</if>
			<if test="record.dispatcherDetailId != null">
				dispatcher_detail_id = #{record.dispatcherDetailId,jdbcType=BIGINT},
			</if>
			<if test="record.waybillGoodsId != null">
				waybill_goods_id = #{record.waybillGoodsId,jdbcType=BIGINT},
			</if>
			<if test="record.waybillStockDetailId != null">
				waybill_stock_detail_id = #{record.waybillStockDetailId,jdbcType=BIGINT},
			</if>
			<if test="record.signNumber != null">
				sign_number = #{record.signNumber,jdbcType=INTEGER},
			</if>
			<if test="record.refuseNumber != null">
				refuse_number = #{record.refuseNumber,jdbcType=INTEGER},
			</if>
			<if test="record.refuseCause != null">
				refuse_cause = #{record.refuseCause,jdbcType=VARCHAR},
			</if>
			<if test="record.unsignedNumber != null">
				unsigned_number = #{record.unsignedNumber,jdbcType=INTEGER},
			</if>
			<if test="record.createNumber != null">
				create_number = #{record.createNumber,jdbcType=INTEGER},
			</if>
			<if test="record.packages != null">
				packages = #{record.packages,jdbcType=VARCHAR},
			</if>
			<if test="record.boxNumber != null">
				box_number = #{record.boxNumber,jdbcType=VARCHAR},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=VARCHAR},
			</if>
			<if test="record.createUser != null">
				create_user = #{record.createUser,jdbcType=INTEGER},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=BIGINT},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=BIGINT},
			</if>
			<if test="record.updateUser != null">
				update_user = #{record.updateUser,jdbcType=INTEGER},
			</if>
			<if test="record.unit != null">
				unit = #{record.unit,jdbcType=VARCHAR},
			</if>
			<if test="record.amount != null">
				amount = #{record.amount,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update sign_details
		set id = #{record.id,jdbcType=BIGINT},
		company_id = #{record.companyId,jdbcType=BIGINT},
		sign_id = #{record.signId,jdbcType=BIGINT},
		waybill_id = #{record.waybillId,jdbcType=BIGINT},
		goods_name = #{record.goodsName,jdbcType=VARCHAR},
		dispatcher_detail_id = #{record.dispatcherDetailId,jdbcType=BIGINT},
		waybill_goods_id = #{record.waybillGoodsId,jdbcType=BIGINT},
		waybill_stock_detail_id = #{record.waybillStockDetailId,jdbcType=BIGINT},
		sign_number = #{record.signNumber,jdbcType=INTEGER},
		refuse_number = #{record.refuseNumber,jdbcType=INTEGER},
		refuse_cause = #{record.refuseCause,jdbcType=VARCHAR},
		unsigned_number = #{record.unsignedNumber,jdbcType=INTEGER},
		create_number = #{record.createNumber,jdbcType=INTEGER},
		packages = #{record.packages,jdbcType=VARCHAR},
		box_number = #{record.boxNumber,jdbcType=VARCHAR},
		remark = #{record.remark,jdbcType=VARCHAR},
		create_user = #{record.createUser,jdbcType=INTEGER},
		create_time = #{record.createTime,jdbcType=BIGINT},
		update_time = #{record.updateTime,jdbcType=BIGINT},
		update_user = #{record.updateUser,jdbcType=INTEGER},
		unit = #{record.unit,jdbcType=VARCHAR},
		amount = #{record.amount,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.hivescm.tms.finance.server.dao.entity.sign.SignDetailDO">
		update sign_details
		<set>
			<if test="companyId != null">
				company_id = #{companyId,jdbcType=BIGINT},
			</if>
			<if test="signId != null">
				sign_id = #{signId,jdbcType=BIGINT},
			</if>
			<if test="waybillId != null">
				waybill_id = #{waybillId,jdbcType=BIGINT},
			</if>
			<if test="goodsName != null">
				goods_name = #{goodsName,jdbcType=VARCHAR},
			</if>
			<if test="dispatcherDetailId != null">
				dispatcher_detail_id = #{dispatcherDetailId,jdbcType=BIGINT},
			</if>
			<if test="waybillGoodsId != null">
				waybill_goods_id = #{waybillGoodsId,jdbcType=BIGINT},
			</if>
			<if test="waybillStockDetailId != null">
				waybill_stock_detail_id = #{waybillStockDetailId,jdbcType=BIGINT},
			</if>
			<if test="signNumber != null">
				sign_number = #{signNumber,jdbcType=INTEGER},
			</if>
			<if test="refuseNumber != null">
				refuse_number = #{refuseNumber,jdbcType=INTEGER},
			</if>
			<if test="refuseCause != null">
				refuse_cause = #{refuseCause,jdbcType=VARCHAR},
			</if>
			<if test="unsignedNumber != null">
				unsigned_number = #{unsignedNumber,jdbcType=INTEGER},
			</if>
			<if test="createNumber != null">
				create_number = #{createNumber,jdbcType=INTEGER},
			</if>
			<if test="packages != null">
				packages = #{packages,jdbcType=VARCHAR},
			</if>
			<if test="boxNumber != null">
				box_number = #{boxNumber,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=BIGINT},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=BIGINT},
			</if>
			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=INTEGER},
			</if>
			<if test="unit != null">
				unit = #{unit,jdbcType=VARCHAR},
			</if>
			<if test="amount != null">
				amount = #{amount,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.hivescm.tms.finance.server.dao.entity.sign.SignDetailDO">
		update sign_details
		set company_id = #{companyId,jdbcType=BIGINT},
		sign_id = #{signId,jdbcType=BIGINT},
		waybill_id = #{waybillId,jdbcType=BIGINT},
		goods_name = #{goodsName,jdbcType=VARCHAR},
		dispatcher_detail_id = #{dispatcherDetailId,jdbcType=BIGINT},
		waybill_goods_id = #{waybillGoodsId,jdbcType=BIGINT},
		waybill_stock_detail_id = #{waybillStockDetailId,jdbcType=BIGINT},
		sign_number = #{signNumber,jdbcType=INTEGER},
		refuse_number = #{refuseNumber,jdbcType=INTEGER},
		refuse_cause = #{refuseCause,jdbcType=VARCHAR},
		unsigned_number = #{unsignedNumber,jdbcType=INTEGER},
		create_number = #{createNumber,jdbcType=INTEGER},
		packages = #{packages,jdbcType=VARCHAR},
		box_number = #{boxNumber,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		create_user = #{createUser,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=BIGINT},
		update_time = #{updateTime,jdbcType=BIGINT},
		update_user = #{updateUser,jdbcType=INTEGER},
		unit = #{unit,jdbcType=VARCHAR},
		amount = #{amount,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<!--自定义sql -->
	<insert id="insertBatch" parameterType="java.util.List">
		insert into sign_details ( id, company_id, sign_id, waybill_id,
		goods_name, dispatcher_detail_id, waybill_goods_id,
		waybill_stock_detail_id, sign_number, refuse_number,refuse_cause, unsigned_number,
		create_number,
		packages, box_number, remark, create_user, create_time, update_time,
		update_user,
		unit, amount)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.id,jdbcType=BIGINT},#{item.companyId,jdbcType=BIGINT},
			#{item.signId,jdbcType=BIGINT}, #{item.waybillId,jdbcType=BIGINT},
			#{item.goodsName,jdbcType=VARCHAR},
			#{item.dispatcherDetailId,jdbcType=BIGINT},
			#{item.waybillGoodsId,jdbcType=BIGINT},
			#{item.waybillStockDetailId,jdbcType=BIGINT},
			#{item.signNumber,jdbcType=INTEGER},
			#{item.refuseNumber,jdbcType=INTEGER},
			#{item.refuseCause,jdbcType=VARCHAR},
			#{item.unsignedNumber,jdbcType=INTEGER},
			#{item.createNumber,jdbcType=INTEGER},
			#{item.packages,jdbcType=VARCHAR},
			#{item.boxNumber,jdbcType=VARCHAR}, #{item.remark,jdbcType=VARCHAR},
			#{item.createUser,jdbcType=INTEGER},
			#{item.createTime,jdbcType=BIGINT},
			#{item.updateTime,jdbcType=BIGINT},
			#{item.updateUser,jdbcType=INTEGER},
			#{item.unit,jdbcType=VARCHAR}, #{item.amount,jdbcType=INTEGER})
		</foreach>
	</insert>
	<delete id="deleteBatchBySignId" parameterType="java.util.List">
		delete from sign_details where sign_id in
		<foreach collection="list" item="item" separator="," open="(" close=")">
  		 #{item,jdbcType=BIGINT}
  	</foreach>
	</delete>
</mapper>