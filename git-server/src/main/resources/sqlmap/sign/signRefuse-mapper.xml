<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hivescm.tms.finance.server.dao.mapper.sign.SignRefuseDOMapper">
  <resultMap id="BaseResultMap" type="com.hivescm.tms.finance.server.dao.entity.sign.SignRefuseDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="refuse_code" jdbcType="VARCHAR" property="refuseCode" />
    <result column="refuse_type" jdbcType="INTEGER" property="refuseType" />
    <result column="sales_return_id" jdbcType="BIGINT" property="salesReturnId" />
    <result column="refuse_waybill_id" jdbcType="BIGINT" property="refuseWaybillId" />
    <result column="sign_id" jdbcType="BIGINT" property="signId" />
    <result column="refuse_time" jdbcType="TIMESTAMP" property="refuseTime" />
    <result column="refuse_people" jdbcType="VARCHAR" property="refusePeople" />
    <result column="refuse_phone" jdbcType="VARCHAR" property="refusePhone" />
    <result column="refuse_card" jdbcType="VARCHAR" property="refuseCard" />
    <result column="waybill_id" jdbcType="BIGINT" property="waybillId" />
    <result column="order_code" jdbcType="VARCHAR" property="orderCode" />
    <result column="carrier_name" jdbcType="VARCHAR" property="carrierName" />
    <result column="order_pay" jdbcType="DECIMAL" property="orderPay" />
    <result column="refuse_pay" jdbcType="DECIMAL" property="refusePay" />
    <result column="distribution_type" jdbcType="INTEGER" property="distributionType" />
    <result column="dispacher_code" jdbcType="BIGINT" property="dispacherCode" />
    <result column="invoiceway_name" jdbcType="VARCHAR" property="invoicewayName" />
    <result column="car_number" jdbcType="VARCHAR" property="carNumber" />
    <result column="car_name" jdbcType="VARCHAR" property="carName" />
    <result column="car_phone" jdbcType="VARCHAR" property="carPhone" />
    <result column="invoice_company" jdbcType="VARCHAR" property="invoiceCompany" />
    <result column="invoice_name" jdbcType="VARCHAR" property="invoiceName" />
    <result column="invoice_name_phone" jdbcType="VARCHAR" property="invoiceNamePhone" />
    <result column="invoice_address" jdbcType="VARCHAR" property="invoiceAddress" />
    <result column="loaded" jdbcType="BIT" property="loaded" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, refuse_code, refuse_type, sales_return_id, refuse_waybill_id, sign_id, refuse_time,
    refuse_people, refuse_phone, refuse_card, waybill_id, order_code, carrier_name, order_pay,
    refuse_pay, distribution_type, dispacher_code, invoiceway_name, car_number, car_name,
    car_phone, invoice_company, invoice_name, invoice_name_phone, invoice_address, loaded,
    company_id, create_user, create_time, update_user, update_time
  </sql>
  <select id="selectBySignId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sign_refuse
    where sign_id = #{signId,jdbcType=BIGINT}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sign_refuse
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sign_refuse
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hivescm.tms.finance.server.dao.entity.sign.SignRefuseDO">
    insert into sign_refuse (id, refuse_code, refuse_type,
    sales_return_id, refuse_waybill_id, sign_id,
    refuse_time, refuse_people, refuse_phone,
    refuse_card, waybill_id, order_code,
    carrier_name, order_pay, refuse_pay,
    distribution_type, dispacher_code, invoiceway_name,
    car_number, car_name, car_phone,
    invoice_company, invoice_name, invoice_name_phone,
    invoice_address, loaded, company_id,
    create_user, create_time, update_user,
    update_time)
    values (#{id,jdbcType=BIGINT}, #{refuseCode,jdbcType=VARCHAR}, #{refuseType,jdbcType=INTEGER},
    #{salesReturnId,jdbcType=BIGINT}, #{refuseWaybillId,jdbcType=BIGINT}, #{signId,jdbcType=BIGINT},
    #{refuseTime,jdbcType=TIMESTAMP}, #{refusePeople,jdbcType=VARCHAR}, #{refusePhone,jdbcType=VARCHAR},
    #{refuseCard,jdbcType=VARCHAR}, #{waybillId,jdbcType=BIGINT}, #{orderCode,jdbcType=VARCHAR},
    #{carrierName,jdbcType=VARCHAR}, #{orderPay,jdbcType=DECIMAL}, #{refusePay,jdbcType=DECIMAL},
    #{distributionType,jdbcType=INTEGER}, #{dispacherCode,jdbcType=BIGINT}, #{invoicewayName,jdbcType=VARCHAR},
    #{carNumber,jdbcType=VARCHAR}, #{carName,jdbcType=VARCHAR}, #{carPhone,jdbcType=VARCHAR},
    #{invoiceCompany,jdbcType=VARCHAR}, #{invoiceName,jdbcType=VARCHAR}, #{invoiceNamePhone,jdbcType=VARCHAR},
    #{invoiceAddress,jdbcType=VARCHAR}, #{loaded,jdbcType=BIT}, #{companyId,jdbcType=BIGINT},
    #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{updateUser,jdbcType=INTEGER},
    #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.hivescm.tms.finance.server.dao.entity.sign.SignRefuseDO">
    insert into sign_refuse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="refuseCode != null">
        refuse_code,
      </if>
      <if test="refuseType != null">
        refuse_type,
      </if>
      <if test="salesReturnId != null">
        sales_return_id,
      </if>
      <if test="refuseWaybillId != null">
        refuse_waybill_id,
      </if>
      <if test="signId != null">
        sign_id,
      </if>
      <if test="refuseTime != null">
        refuse_time,
      </if>
      <if test="refusePeople != null">
        refuse_people,
      </if>
      <if test="refusePhone != null">
        refuse_phone,
      </if>
      <if test="refuseCard != null">
        refuse_card,
      </if>
      <if test="waybillId != null">
        waybill_id,
      </if>
      <if test="orderCode != null">
        order_code,
      </if>
      <if test="carrierName != null">
        carrier_name,
      </if>
      <if test="orderPay != null">
        order_pay,
      </if>
      <if test="refusePay != null">
        refuse_pay,
      </if>
      <if test="distributionType != null">
        distribution_type,
      </if>
      <if test="dispacherCode != null">
        dispacher_code,
      </if>
      <if test="invoicewayName != null">
        invoiceway_name,
      </if>
      <if test="carNumber != null">
        car_number,
      </if>
      <if test="carName != null">
        car_name,
      </if>
      <if test="carPhone != null">
        car_phone,
      </if>
      <if test="invoiceCompany != null">
        invoice_company,
      </if>
      <if test="invoiceName != null">
        invoice_name,
      </if>
      <if test="invoiceNamePhone != null">
        invoice_name_phone,
      </if>
      <if test="invoiceAddress != null">
        invoice_address,
      </if>
      <if test="loaded != null">
        loaded,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="refuseCode != null">
        #{refuseCode,jdbcType=VARCHAR},
      </if>
      <if test="refuseType != null">
        #{refuseType,jdbcType=INTEGER},
      </if>
      <if test="salesReturnId != null">
        #{salesReturnId,jdbcType=BIGINT},
      </if>
      <if test="refuseWaybillId != null">
        #{refuseWaybillId,jdbcType=BIGINT},
      </if>
      <if test="signId != null">
        #{signId,jdbcType=BIGINT},
      </if>
      <if test="refuseTime != null">
        #{refuseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refusePeople != null">
        #{refusePeople,jdbcType=VARCHAR},
      </if>
      <if test="refusePhone != null">
        #{refusePhone,jdbcType=VARCHAR},
      </if>
      <if test="refuseCard != null">
        #{refuseCard,jdbcType=VARCHAR},
      </if>
      <if test="waybillId != null">
        #{waybillId,jdbcType=BIGINT},
      </if>
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="carrierName != null">
        #{carrierName,jdbcType=VARCHAR},
      </if>
      <if test="orderPay != null">
        #{orderPay,jdbcType=DECIMAL},
      </if>
      <if test="refusePay != null">
        #{refusePay,jdbcType=DECIMAL},
      </if>
      <if test="distributionType != null">
        #{distributionType,jdbcType=INTEGER},
      </if>
      <if test="dispacherCode != null">
        #{dispacherCode,jdbcType=BIGINT},
      </if>
      <if test="invoicewayName != null">
        #{invoicewayName,jdbcType=VARCHAR},
      </if>
      <if test="carNumber != null">
        #{carNumber,jdbcType=VARCHAR},
      </if>
      <if test="carName != null">
        #{carName,jdbcType=VARCHAR},
      </if>
      <if test="carPhone != null">
        #{carPhone,jdbcType=VARCHAR},
      </if>
      <if test="invoiceCompany != null">
        #{invoiceCompany,jdbcType=VARCHAR},
      </if>
      <if test="invoiceName != null">
        #{invoiceName,jdbcType=VARCHAR},
      </if>
      <if test="invoiceNamePhone != null">
        #{invoiceNamePhone,jdbcType=VARCHAR},
      </if>
      <if test="invoiceAddress != null">
        #{invoiceAddress,jdbcType=VARCHAR},
      </if>
      <if test="loaded != null">
        #{loaded,jdbcType=BIT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update sign_refuse
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.refuseCode != null">
        refuse_code = #{record.refuseCode,jdbcType=VARCHAR},
      </if>
      <if test="record.refuseType != null">
        refuse_type = #{record.refuseType,jdbcType=INTEGER},
      </if>
      <if test="record.salesReturnId != null">
        sales_return_id = #{record.salesReturnId,jdbcType=BIGINT},
      </if>
      <if test="record.refuseWaybillId != null">
        refuse_waybill_id = #{record.refuseWaybillId,jdbcType=BIGINT},
      </if>
      <if test="record.signId != null">
        sign_id = #{record.signId,jdbcType=BIGINT},
      </if>
      <if test="record.refuseTime != null">
        refuse_time = #{record.refuseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refusePeople != null">
        refuse_people = #{record.refusePeople,jdbcType=VARCHAR},
      </if>
      <if test="record.refusePhone != null">
        refuse_phone = #{record.refusePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.refuseCard != null">
        refuse_card = #{record.refuseCard,jdbcType=VARCHAR},
      </if>
      <if test="record.waybillId != null">
        waybill_id = #{record.waybillId,jdbcType=BIGINT},
      </if>
      <if test="record.orderCode != null">
        order_code = #{record.orderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.carrierName != null">
        carrier_name = #{record.carrierName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderPay != null">
        order_pay = #{record.orderPay,jdbcType=DECIMAL},
      </if>
      <if test="record.refusePay != null">
        refuse_pay = #{record.refusePay,jdbcType=DECIMAL},
      </if>
      <if test="record.distributionType != null">
        distribution_type = #{record.distributionType,jdbcType=INTEGER},
      </if>
      <if test="record.dispacherCode != null">
        dispacher_code = #{record.dispacherCode,jdbcType=BIGINT},
      </if>
      <if test="record.invoicewayName != null">
        invoiceway_name = #{record.invoicewayName,jdbcType=VARCHAR},
      </if>
      <if test="record.carNumber != null">
        car_number = #{record.carNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.carName != null">
        car_name = #{record.carName,jdbcType=VARCHAR},
      </if>
      <if test="record.carPhone != null">
        car_phone = #{record.carPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceCompany != null">
        invoice_company = #{record.invoiceCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceName != null">
        invoice_name = #{record.invoiceName,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceNamePhone != null">
        invoice_name_phone = #{record.invoiceNamePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceAddress != null">
        invoice_address = #{record.invoiceAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.loaded != null">
        loaded = #{record.loaded,jdbcType=BIT},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sign_refuse
    set id = #{record.id,jdbcType=BIGINT},
    refuse_code = #{record.refuseCode,jdbcType=VARCHAR},
    refuse_type = #{record.refuseType,jdbcType=INTEGER},
    sales_return_id = #{record.salesReturnId,jdbcType=BIGINT},
    refuse_waybill_id = #{record.refuseWaybillId,jdbcType=BIGINT},
    sign_id = #{record.signId,jdbcType=BIGINT},
    refuse_time = #{record.refuseTime,jdbcType=TIMESTAMP},
    refuse_people = #{record.refusePeople,jdbcType=VARCHAR},
    refuse_phone = #{record.refusePhone,jdbcType=VARCHAR},
    refuse_card = #{record.refuseCard,jdbcType=VARCHAR},
    waybill_id = #{record.waybillId,jdbcType=BIGINT},
    order_code = #{record.orderCode,jdbcType=VARCHAR},
    carrier_name = #{record.carrierName,jdbcType=VARCHAR},
    order_pay = #{record.orderPay,jdbcType=DECIMAL},
    refuse_pay = #{record.refusePay,jdbcType=DECIMAL},
    distribution_type = #{record.distributionType,jdbcType=INTEGER},
    dispacher_code = #{record.dispacherCode,jdbcType=BIGINT},
    invoiceway_name = #{record.invoicewayName,jdbcType=VARCHAR},
    car_number = #{record.carNumber,jdbcType=VARCHAR},
    car_name = #{record.carName,jdbcType=VARCHAR},
    car_phone = #{record.carPhone,jdbcType=VARCHAR},
    invoice_company = #{record.invoiceCompany,jdbcType=VARCHAR},
    invoice_name = #{record.invoiceName,jdbcType=VARCHAR},
    invoice_name_phone = #{record.invoiceNamePhone,jdbcType=VARCHAR},
    invoice_address = #{record.invoiceAddress,jdbcType=VARCHAR},
    loaded = #{record.loaded,jdbcType=BIT},
    company_id = #{record.companyId,jdbcType=BIGINT},
    create_user = #{record.createUser,jdbcType=INTEGER},
    create_time = #{record.createTime,jdbcType=BIGINT},
    update_user = #{record.updateUser,jdbcType=INTEGER},
    update_time = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hivescm.tms.finance.server.dao.entity.sign.SignRefuseDO">
    update sign_refuse
    <set>
      <if test="refuseCode != null">
        refuse_code = #{refuseCode,jdbcType=VARCHAR},
      </if>
      <if test="refuseType != null">
        refuse_type = #{refuseType,jdbcType=INTEGER},
      </if>
      <if test="salesReturnId != null">
        sales_return_id = #{salesReturnId,jdbcType=BIGINT},
      </if>
      <if test="refuseWaybillId != null">
        refuse_waybill_id = #{refuseWaybillId,jdbcType=BIGINT},
      </if>
      <if test="signId != null">
        sign_id = #{signId,jdbcType=BIGINT},
      </if>
      <if test="refuseTime != null">
        refuse_time = #{refuseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refusePeople != null">
        refuse_people = #{refusePeople,jdbcType=VARCHAR},
      </if>
      <if test="refusePhone != null">
        refuse_phone = #{refusePhone,jdbcType=VARCHAR},
      </if>
      <if test="refuseCard != null">
        refuse_card = #{refuseCard,jdbcType=VARCHAR},
      </if>
      <if test="waybillId != null">
        waybill_id = #{waybillId,jdbcType=BIGINT},
      </if>
      <if test="orderCode != null">
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="carrierName != null">
        carrier_name = #{carrierName,jdbcType=VARCHAR},
      </if>
      <if test="orderPay != null">
        order_pay = #{orderPay,jdbcType=DECIMAL},
      </if>
      <if test="refusePay != null">
        refuse_pay = #{refusePay,jdbcType=DECIMAL},
      </if>
      <if test="distributionType != null">
        distribution_type = #{distributionType,jdbcType=INTEGER},
      </if>
      <if test="dispacherCode != null">
        dispacher_code = #{dispacherCode,jdbcType=BIGINT},
      </if>
      <if test="invoicewayName != null">
        invoiceway_name = #{invoicewayName,jdbcType=VARCHAR},
      </if>
      <if test="carNumber != null">
        car_number = #{carNumber,jdbcType=VARCHAR},
      </if>
      <if test="carName != null">
        car_name = #{carName,jdbcType=VARCHAR},
      </if>
      <if test="carPhone != null">
        car_phone = #{carPhone,jdbcType=VARCHAR},
      </if>
      <if test="invoiceCompany != null">
        invoice_company = #{invoiceCompany,jdbcType=VARCHAR},
      </if>
      <if test="invoiceName != null">
        invoice_name = #{invoiceName,jdbcType=VARCHAR},
      </if>
      <if test="invoiceNamePhone != null">
        invoice_name_phone = #{invoiceNamePhone,jdbcType=VARCHAR},
      </if>
      <if test="invoiceAddress != null">
        invoice_address = #{invoiceAddress,jdbcType=VARCHAR},
      </if>
      <if test="loaded != null">
        loaded = #{loaded,jdbcType=BIT},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hivescm.tms.finance.server.dao.entity.sign.SignRefuseDO">
    update sign_refuse
    set refuse_code = #{refuseCode,jdbcType=VARCHAR},
      refuse_type = #{refuseType,jdbcType=INTEGER},
      sales_return_id = #{salesReturnId,jdbcType=BIGINT},
      refuse_waybill_id = #{refuseWaybillId,jdbcType=BIGINT},
      sign_id = #{signId,jdbcType=BIGINT},
      refuse_time = #{refuseTime,jdbcType=TIMESTAMP},
      refuse_people = #{refusePeople,jdbcType=VARCHAR},
      refuse_phone = #{refusePhone,jdbcType=VARCHAR},
      refuse_card = #{refuseCard,jdbcType=VARCHAR},
      waybill_id = #{waybillId,jdbcType=BIGINT},
      order_code = #{orderCode,jdbcType=VARCHAR},
      carrier_name = #{carrierName,jdbcType=VARCHAR},
      order_pay = #{orderPay,jdbcType=DECIMAL},
      refuse_pay = #{refusePay,jdbcType=DECIMAL},
      distribution_type = #{distributionType,jdbcType=INTEGER},
      dispacher_code = #{dispacherCode,jdbcType=BIGINT},
      invoiceway_name = #{invoicewayName,jdbcType=VARCHAR},
      car_number = #{carNumber,jdbcType=VARCHAR},
      car_name = #{carName,jdbcType=VARCHAR},
      car_phone = #{carPhone,jdbcType=VARCHAR},
      invoice_company = #{invoiceCompany,jdbcType=VARCHAR},
      invoice_name = #{invoiceName,jdbcType=VARCHAR},
      invoice_name_phone = #{invoiceNamePhone,jdbcType=VARCHAR},
      invoice_address = #{invoiceAddress,jdbcType=VARCHAR},
      loaded = #{loaded,jdbcType=BIT},
      company_id = #{companyId,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <delete id="deleteBatch" parameterType="java.util.List">
  	delete from sign_refuse where sign_id in 
  	<foreach collection="list" item="item" separator="," open="(" close=")">
  		 #{item,jdbcType=BIGINT}
  	</foreach>
  </delete>
  
  <insert id="insertBatch">
   insert into sign_refuse (id, refuse_code, refuse_type,
    sales_return_id, refuse_waybill_id, sign_id,
    refuse_time, refuse_people, refuse_phone,
    refuse_card, waybill_id, order_code,
    carrier_name, order_pay, refuse_pay,
    distribution_type, dispacher_code, invoiceway_name,
    car_number, car_name, car_phone,
    invoice_company, invoice_name, invoice_name_phone,
    invoice_address, loaded, company_id,
    create_user, create_time, update_user,
    update_time)
    values 
    <foreach collection="list" item="item" separator=",">
    	(#{item.id,jdbcType=BIGINT}, #{item.refuseCode,jdbcType=VARCHAR}, #{item.refuseType,jdbcType=INTEGER},
	    #{item.salesReturnId,jdbcType=BIGINT}, #{item.refuseWaybillId,jdbcType=BIGINT}, #{item.signId,jdbcType=BIGINT},
	    #{item.refuseTime,jdbcType=TIMESTAMP}, #{item.refusePeople,jdbcType=VARCHAR}, #{item.refusePhone,jdbcType=VARCHAR},
	    #{item.refuseCard,jdbcType=VARCHAR}, #{item.waybillId,jdbcType=BIGINT}, #{item.orderCode,jdbcType=VARCHAR},
	    #{item.carrierName,jdbcType=VARCHAR}, #{item.orderPay,jdbcType=DECIMAL}, #{item.refusePay,jdbcType=DECIMAL},
	    #{item.distributionType,jdbcType=INTEGER}, #{item.dispacherCode,jdbcType=BIGINT}, #{item.invoicewayName,jdbcType=VARCHAR},
	    #{item.carNumber,jdbcType=VARCHAR}, #{item.carName,jdbcType=VARCHAR}, #{item.carPhone,jdbcType=VARCHAR},
	    #{item.invoiceCompany,jdbcType=VARCHAR}, #{item.invoiceName,jdbcType=VARCHAR}, #{item.invoiceNamePhone,jdbcType=VARCHAR},
	    #{item.invoiceAddress,jdbcType=VARCHAR}, #{item.loaded,jdbcType=BIT}, #{item.companyId,jdbcType=BIGINT},
	    #{item.createUser,jdbcType=INTEGER}, #{item.createTime,jdbcType=BIGINT}, #{item.updateUser,jdbcType=INTEGER},
	    #{item.updateTime,jdbcType=BIGINT})
    </foreach>
  
  </insert>
  <update id="updateBatchRefuseSignByPrimaryKey">
      update sign_refuse
    <set>
      refuse_type=#{record.refuseType,jdbcType=INTEGER},
      update_user=#{record.updateUser,jdbcType=INTEGER},
      update_time=#{record.updateTime,jdbcType=BIGINT}
    </set>
    where id in
    (<foreach collection="list" item="item" separator=",">
    	#{item,jdbcType=BIGINT}
    </foreach>)
  </update>
</mapper>